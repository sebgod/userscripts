#!/bin/sh
# vim: et tw=4 sw=4

MMC=`which mmc`
OPS="--use-grade-subdirs -m"
case `basename $0` in
    mm)
        OPS="$OPS --no-detect-libgrades -s asm_fast.gc"
        ;;
    mmj)
        OPS="$OPS -s java --no-detect-libgrades"
        MER_MMC_DIR=`dirname $MMC`
        MER_LIB_DIR=`dirname $MER_MMC_DIR`/lib/mercury/lib
        MER_JAVA_LIB_DIR=$MER_LIB_DIR/java
        MER_JAVA_CP=

        PREV_IS_ML=0
        for arg in "$@"
        do
            if [ "$arg" = "--mercury-library" ] ; then
                arg=--ml
            fi
            case "$arg" in
                --ml)
                    PREV_IS_ML=1
                    ;;
                *)
                    if [ $PREV_IS_ML = 1 ] ; then
                        JAR=${MER_JAVA_LIB_DIR}/${arg}.jar
                        if [ -r $JAR ] ; then
                            if [ -z $MER_JAVA_CP ] ; then
                                MER_JAVA_CP=$JAR
                            else
                                MER_JAVA_CP=$MER_JAVA_CP:$JAR
                            fi
                        fi
                    fi
                    PREV_IS_ML=0
                    ;;
            esac
        done
        if [ ! -z $MER_JAVA_CP ] ; then
            OPS="--java-classpath $MER_JAVA_CP $OPS"
        fi
        ;;
    mmcs)
        OPS="$OPS -s csharp --no-detect-libgrades"
        ;;
    mme)
        OPS="$OPS -s erlang --no-detect-libgrades"
        ;;
    mmtr)
        OPS="$OPS --use-trail --trail-segments"
        ;;
    *)
        echo Is using an unconfigured grade $0
        exit 1
        ;;
esac



FIRST=$1
if [ -r Mercury.options ] ;
then
    while IFS== read key val; do
        case $key in
        "MAIN_TARGET")
            MAIN_TARGET=${val%% *}
            ;;
        esac
    done < Mercury.options
fi



$MMC $OPS $*

if [ $# -eq 0 ] ;
then
    FIRST=$MAIN_TARGET
else
    shift
fi

if ! [ -z $FIRST ] ;
then
    case $FIRST in
        lib*)
            LIB_INSTALL=${FIRST}.install
            sudo $MMC $OPS $LIB_INSTALL $*
            ;;
    esac
fi

